/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AuthenticatedRouteImport } from './pages/_authenticated'
import { Route as AuthRouteImport } from './pages/_auth'
import { Route as AuthSignInRouteImport } from './pages/_auth/sign-in'
import { Route as AuthenticatedAppLayoutRouteImport } from './pages/_authenticated/_app/layout'
import { Route as AuthenticatedAppServicesRouteImport } from './pages/_authenticated/_app/services'
import { Route as AuthenticatedAppServiceOrderRouteImport } from './pages/_authenticated/_app/service-order'
import { Route as AuthenticatedAppCustomersRouteImport } from './pages/_authenticated/_app/customers'
import { Route as AuthenticatedAppOverviewIndexRouteImport } from './pages/_authenticated/_app/_overview/index'
import { Route as AuthenticatedAppInventoryControlReportsRouteImport } from './pages/_authenticated/_app/inventory-control/reports'
import { Route as AuthenticatedAppInventoryControlInventoryRouteImport } from './pages/_authenticated/_app/inventory-control/inventory'
import { Route as AuthenticatedAppInventoryControlOverviewIndexRouteImport } from './pages/_authenticated/_app/inventory-control/_overview/index'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthenticatedAppLayoutRoute = AuthenticatedAppLayoutRouteImport.update({
  id: '/_app',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedAppServicesRoute =
  AuthenticatedAppServicesRouteImport.update({
    id: '/services',
    path: '/services',
    getParentRoute: () => AuthenticatedAppLayoutRoute,
  } as any)
const AuthenticatedAppServiceOrderRoute =
  AuthenticatedAppServiceOrderRouteImport.update({
    id: '/service-order',
    path: '/service-order',
    getParentRoute: () => AuthenticatedAppLayoutRoute,
  } as any)
const AuthenticatedAppCustomersRoute =
  AuthenticatedAppCustomersRouteImport.update({
    id: '/customers',
    path: '/customers',
    getParentRoute: () => AuthenticatedAppLayoutRoute,
  } as any)
const AuthenticatedAppOverviewIndexRoute =
  AuthenticatedAppOverviewIndexRouteImport.update({
    id: '/_overview/',
    path: '/',
    getParentRoute: () => AuthenticatedAppLayoutRoute,
  } as any)
const AuthenticatedAppInventoryControlReportsRoute =
  AuthenticatedAppInventoryControlReportsRouteImport.update({
    id: '/inventory-control/reports',
    path: '/inventory-control/reports',
    getParentRoute: () => AuthenticatedAppLayoutRoute,
  } as any)
const AuthenticatedAppInventoryControlInventoryRoute =
  AuthenticatedAppInventoryControlInventoryRouteImport.update({
    id: '/inventory-control/inventory',
    path: '/inventory-control/inventory',
    getParentRoute: () => AuthenticatedAppLayoutRoute,
  } as any)
const AuthenticatedAppInventoryControlOverviewIndexRoute =
  AuthenticatedAppInventoryControlOverviewIndexRouteImport.update({
    id: '/inventory-control/_overview/',
    path: '/inventory-control/',
    getParentRoute: () => AuthenticatedAppLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof AuthSignInRoute
  '/customers': typeof AuthenticatedAppCustomersRoute
  '/service-order': typeof AuthenticatedAppServiceOrderRoute
  '/services': typeof AuthenticatedAppServicesRoute
  '/inventory-control/inventory': typeof AuthenticatedAppInventoryControlInventoryRoute
  '/inventory-control/reports': typeof AuthenticatedAppInventoryControlReportsRoute
  '/': typeof AuthenticatedAppOverviewIndexRoute
  '/inventory-control': typeof AuthenticatedAppInventoryControlOverviewIndexRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof AuthSignInRoute
  '/customers': typeof AuthenticatedAppCustomersRoute
  '/service-order': typeof AuthenticatedAppServiceOrderRoute
  '/services': typeof AuthenticatedAppServicesRoute
  '/inventory-control/inventory': typeof AuthenticatedAppInventoryControlInventoryRoute
  '/inventory-control/reports': typeof AuthenticatedAppInventoryControlReportsRoute
  '/': typeof AuthenticatedAppOverviewIndexRoute
  '/inventory-control': typeof AuthenticatedAppInventoryControlOverviewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/_app': typeof AuthenticatedAppLayoutRouteWithChildren
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_authenticated/_app/customers': typeof AuthenticatedAppCustomersRoute
  '/_authenticated/_app/service-order': typeof AuthenticatedAppServiceOrderRoute
  '/_authenticated/_app/services': typeof AuthenticatedAppServicesRoute
  '/_authenticated/_app/inventory-control/inventory': typeof AuthenticatedAppInventoryControlInventoryRoute
  '/_authenticated/_app/inventory-control/reports': typeof AuthenticatedAppInventoryControlReportsRoute
  '/_authenticated/_app/_overview/': typeof AuthenticatedAppOverviewIndexRoute
  '/_authenticated/_app/inventory-control/_overview/': typeof AuthenticatedAppInventoryControlOverviewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sign-in'
    | '/customers'
    | '/service-order'
    | '/services'
    | '/inventory-control/inventory'
    | '/inventory-control/reports'
    | '/'
    | '/inventory-control'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/customers'
    | '/service-order'
    | '/services'
    | '/inventory-control/inventory'
    | '/inventory-control/reports'
    | '/'
    | '/inventory-control'
  id:
    | '__root__'
    | '/_auth'
    | '/_authenticated'
    | '/_authenticated/_app'
    | '/_auth/sign-in'
    | '/_authenticated/_app/customers'
    | '/_authenticated/_app/service-order'
    | '/_authenticated/_app/services'
    | '/_authenticated/_app/inventory-control/inventory'
    | '/_authenticated/_app/inventory-control/reports'
    | '/_authenticated/_app/_overview/'
    | '/_authenticated/_app/inventory-control/_overview/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_authenticated/_app': {
      id: '/_authenticated/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedAppLayoutRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/_app/services': {
      id: '/_authenticated/_app/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof AuthenticatedAppServicesRouteImport
      parentRoute: typeof AuthenticatedAppLayoutRoute
    }
    '/_authenticated/_app/service-order': {
      id: '/_authenticated/_app/service-order'
      path: '/service-order'
      fullPath: '/service-order'
      preLoaderRoute: typeof AuthenticatedAppServiceOrderRouteImport
      parentRoute: typeof AuthenticatedAppLayoutRoute
    }
    '/_authenticated/_app/customers': {
      id: '/_authenticated/_app/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof AuthenticatedAppCustomersRouteImport
      parentRoute: typeof AuthenticatedAppLayoutRoute
    }
    '/_authenticated/_app/_overview/': {
      id: '/_authenticated/_app/_overview/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedAppOverviewIndexRouteImport
      parentRoute: typeof AuthenticatedAppLayoutRoute
    }
    '/_authenticated/_app/inventory-control/reports': {
      id: '/_authenticated/_app/inventory-control/reports'
      path: '/inventory-control/reports'
      fullPath: '/inventory-control/reports'
      preLoaderRoute: typeof AuthenticatedAppInventoryControlReportsRouteImport
      parentRoute: typeof AuthenticatedAppLayoutRoute
    }
    '/_authenticated/_app/inventory-control/inventory': {
      id: '/_authenticated/_app/inventory-control/inventory'
      path: '/inventory-control/inventory'
      fullPath: '/inventory-control/inventory'
      preLoaderRoute: typeof AuthenticatedAppInventoryControlInventoryRouteImport
      parentRoute: typeof AuthenticatedAppLayoutRoute
    }
    '/_authenticated/_app/inventory-control/_overview/': {
      id: '/_authenticated/_app/inventory-control/_overview/'
      path: '/inventory-control'
      fullPath: '/inventory-control'
      preLoaderRoute: typeof AuthenticatedAppInventoryControlOverviewIndexRouteImport
      parentRoute: typeof AuthenticatedAppLayoutRoute
    }
  }
}

interface AuthRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface AuthenticatedAppLayoutRouteChildren {
  AuthenticatedAppCustomersRoute: typeof AuthenticatedAppCustomersRoute
  AuthenticatedAppServiceOrderRoute: typeof AuthenticatedAppServiceOrderRoute
  AuthenticatedAppServicesRoute: typeof AuthenticatedAppServicesRoute
  AuthenticatedAppInventoryControlInventoryRoute: typeof AuthenticatedAppInventoryControlInventoryRoute
  AuthenticatedAppInventoryControlReportsRoute: typeof AuthenticatedAppInventoryControlReportsRoute
  AuthenticatedAppOverviewIndexRoute: typeof AuthenticatedAppOverviewIndexRoute
  AuthenticatedAppInventoryControlOverviewIndexRoute: typeof AuthenticatedAppInventoryControlOverviewIndexRoute
}

const AuthenticatedAppLayoutRouteChildren: AuthenticatedAppLayoutRouteChildren =
  {
    AuthenticatedAppCustomersRoute: AuthenticatedAppCustomersRoute,
    AuthenticatedAppServiceOrderRoute: AuthenticatedAppServiceOrderRoute,
    AuthenticatedAppServicesRoute: AuthenticatedAppServicesRoute,
    AuthenticatedAppInventoryControlInventoryRoute:
      AuthenticatedAppInventoryControlInventoryRoute,
    AuthenticatedAppInventoryControlReportsRoute:
      AuthenticatedAppInventoryControlReportsRoute,
    AuthenticatedAppOverviewIndexRoute: AuthenticatedAppOverviewIndexRoute,
    AuthenticatedAppInventoryControlOverviewIndexRoute:
      AuthenticatedAppInventoryControlOverviewIndexRoute,
  }

const AuthenticatedAppLayoutRouteWithChildren =
  AuthenticatedAppLayoutRoute._addFileChildren(
    AuthenticatedAppLayoutRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedAppLayoutRoute: typeof AuthenticatedAppLayoutRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAppLayoutRoute: AuthenticatedAppLayoutRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
